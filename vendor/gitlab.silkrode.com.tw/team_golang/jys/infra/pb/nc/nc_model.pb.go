// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pb/nc/nc_model.proto

package nc

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "gitlab.silkrode.com.tw/golang/gopher/pb/v2/commonpb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NotificationType int32

const (
	NotificationType_Unknown            NotificationType = 0
	NotificationType_Announcement       NotificationType = 1
	NotificationType_DeviceVerification NotificationType = 2
	NotificationType_LoginNewIP         NotificationType = 3
	NotificationType_Deposit            NotificationType = 4
	NotificationType_Withdraw           NotificationType = 5
	NotificationType_TradeBuy           NotificationType = 6
	NotificationType_TradeSell          NotificationType = 7
	NotificationType_Feedback           NotificationType = 8
)

var NotificationType_name = map[int32]string{
	0: "NotificationType_Unknown",
	1: "NotificationType_Announcement",
	2: "NotificationType_DeviceVerification",
	3: "NotificationType_LoginNewIP",
	4: "NotificationType_Deposit",
	5: "NotificationType_Withdraw",
	6: "NotificationType_TradeBuy",
	7: "NotificationType_TradeSell",
	8: "NotificationType_Feedback",
}

var NotificationType_value = map[string]int32{
	"NotificationType_Unknown":            0,
	"NotificationType_Announcement":       1,
	"NotificationType_DeviceVerification": 2,
	"NotificationType_LoginNewIP":         3,
	"NotificationType_Deposit":            4,
	"NotificationType_Withdraw":           5,
	"NotificationType_TradeBuy":           6,
	"NotificationType_TradeSell":          7,
	"NotificationType_Feedback":           8,
}

func (x NotificationType) String() string {
	return proto.EnumName(NotificationType_name, int32(x))
}

func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_154e80a10bb1f7f8, []int{0}
}

type Notification struct {
	ID          int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string           `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content     string           `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Type        NotificationType `protobuf:"varint,4,opt,name=type,proto3,enum=nc.NotificationType" json:"type,omitempty"`
	PublishedAt time.Time        `protobuf:"bytes,5,opt,name=published_at,json=publishedAt,proto3,stdtime" json:"published_at"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_154e80a10bb1f7f8, []int{0}
}
func (m *Notification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return m.Size()
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Notification) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Notification) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Notification) GetType() NotificationType {
	if m != nil {
		return m.Type
	}
	return NotificationType_Unknown
}

func (m *Notification) GetPublishedAt() time.Time {
	if m != nil {
		return m.PublishedAt
	}
	return time.Time{}
}

type UserNotification struct {
	ID             int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID         int64         `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationID int64         `protobuf:"varint,3,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	ReadAt         *time.Time    `protobuf:"bytes,4,opt,name=read_at,json=readAt,proto3,stdtime" json:"read_at,omitempty"`
	Notification   *Notification `protobuf:"bytes,5,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (m *UserNotification) Reset()         { *m = UserNotification{} }
func (m *UserNotification) String() string { return proto.CompactTextString(m) }
func (*UserNotification) ProtoMessage()    {}
func (*UserNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_154e80a10bb1f7f8, []int{1}
}
func (m *UserNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserNotification.Merge(m, src)
}
func (m *UserNotification) XXX_Size() int {
	return m.Size()
}
func (m *UserNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_UserNotification.DiscardUnknown(m)
}

var xxx_messageInfo_UserNotification proto.InternalMessageInfo

func (m *UserNotification) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *UserNotification) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UserNotification) GetNotificationID() int64 {
	if m != nil {
		return m.NotificationID
	}
	return 0
}

func (m *UserNotification) GetReadAt() *time.Time {
	if m != nil {
		return m.ReadAt
	}
	return nil
}

func (m *UserNotification) GetNotification() *Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

type User struct {
	ID           int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserDeviceID string `protobuf:"bytes,2,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_154e80a10bb1f7f8, []int{2}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return m.Size()
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *User) GetUserDeviceID() string {
	if m != nil {
		return m.UserDeviceID
	}
	return ""
}

func init() {
	proto.RegisterEnum("nc.NotificationType", NotificationType_name, NotificationType_value)
	golang_proto.RegisterEnum("nc.NotificationType", NotificationType_name, NotificationType_value)
	proto.RegisterType((*Notification)(nil), "nc.Notification")
	golang_proto.RegisterType((*Notification)(nil), "nc.Notification")
	proto.RegisterType((*UserNotification)(nil), "nc.UserNotification")
	golang_proto.RegisterType((*UserNotification)(nil), "nc.UserNotification")
	proto.RegisterType((*User)(nil), "nc.User")
	golang_proto.RegisterType((*User)(nil), "nc.User")
}

func init() { proto.RegisterFile("pb/nc/nc_model.proto", fileDescriptor_154e80a10bb1f7f8) }
func init() { golang_proto.RegisterFile("pb/nc/nc_model.proto", fileDescriptor_154e80a10bb1f7f8) }

var fileDescriptor_154e80a10bb1f7f8 = []byte{
	// 647 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0xd3, 0x4a,
	0x14, 0x8d, 0x9d, 0x34, 0x69, 0xa7, 0x51, 0x9e, 0x35, 0x8a, 0x9e, 0xfc, 0xf2, 0x68, 0x1c, 0xda,
	0x05, 0x11, 0x12, 0xb6, 0x14, 0x10, 0x48, 0xb0, 0xaa, 0x65, 0x81, 0x2c, 0xa1, 0x0a, 0x99, 0x16,
	0x24, 0x36, 0x91, 0xed, 0x99, 0x3a, 0x43, 0xc7, 0x33, 0x96, 0x3d, 0x6e, 0x94, 0x7f, 0x00, 0xbb,
	0x2e, 0xd9, 0x52, 0xfe, 0x07, 0x62, 0xd9, 0x65, 0x77, 0xec, 0x02, 0x32, 0x7f, 0x04, 0x79, 0xd2,
	0xb4, 0x69, 0x12, 0x24, 0x76, 0xbe, 0xf7, 0x9c, 0xfb, 0x71, 0xce, 0xc8, 0x17, 0xb4, 0x93, 0xc0,
	0x62, 0xa1, 0xc5, 0xc2, 0x61, 0xcc, 0x11, 0xa6, 0x66, 0x92, 0x72, 0xc1, 0xa1, 0xca, 0xc2, 0xce,
	0x83, 0x88, 0x88, 0x51, 0x1e, 0x98, 0x21, 0x8f, 0xad, 0x88, 0x47, 0xdc, 0x92, 0x50, 0x90, 0x1f,
	0xcb, 0x48, 0x06, 0xf2, 0x6b, 0x56, 0xd2, 0xb1, 0x23, 0x22, 0xa8, 0x1f, 0x98, 0x19, 0xa1, 0x27,
	0x29, 0x47, 0xb8, 0xac, 0x33, 0xc5, 0xd8, 0x8a, 0x38, 0xf5, 0x59, 0x64, 0x45, 0x3c, 0x19, 0xe1,
	0xd4, 0x4a, 0x02, 0xeb, 0x74, 0x60, 0x85, 0x3c, 0x8e, 0x39, 0x2b, 0x27, 0xe7, 0x94, 0xfa, 0x01,
	0xc5, 0x57, 0x3d, 0x8c, 0x88, 0xf3, 0x88, 0xe2, 0x9b, 0x49, 0x82, 0xc4, 0x38, 0x13, 0x7e, 0x9c,
	0xcc, 0x08, 0xbb, 0xdf, 0x15, 0xd0, 0x3c, 0xe0, 0x82, 0x1c, 0x93, 0xd0, 0x17, 0x84, 0x33, 0xf8,
	0x2f, 0x50, 0x09, 0xd2, 0x95, 0x9e, 0xd2, 0xaf, 0xda, 0xf5, 0x62, 0x6a, 0xa8, 0xae, 0xe3, 0xa9,
	0x04, 0xc1, 0x36, 0xd8, 0x10, 0x44, 0x50, 0xac, 0xab, 0x3d, 0xa5, 0xbf, 0xe5, 0xcd, 0x02, 0xa8,
	0x83, 0x46, 0xc8, 0x99, 0xc0, 0x4c, 0xe8, 0x55, 0x99, 0x9f, 0x87, 0xb0, 0x0f, 0x6a, 0x62, 0x92,
	0x60, 0xbd, 0xd6, 0x53, 0xfa, 0xad, 0x41, 0xdb, 0x64, 0xa1, 0xb9, 0x38, 0xe7, 0x70, 0x92, 0x60,
	0x4f, 0x32, 0xe0, 0x0b, 0xd0, 0x4c, 0xf2, 0x80, 0x92, 0x6c, 0x84, 0xd1, 0xd0, 0x17, 0xfa, 0x46,
	0x4f, 0xe9, 0x6f, 0x0f, 0x3a, 0xe6, 0x6c, 0x75, 0x73, 0xbe, 0xba, 0x79, 0x38, 0x5f, 0xdd, 0xde,
	0xbc, 0x98, 0x1a, 0x95, 0xb3, 0x1f, 0x86, 0xe2, 0x6d, 0x5f, 0x57, 0xee, 0x8b, 0xa7, 0xcd, 0xcb,
	0xcf, 0x46, 0xe5, 0xec, 0xdc, 0xa8, 0x7c, 0x3a, 0x37, 0x2a, 0xbb, 0x1f, 0x55, 0xa0, 0x1d, 0x65,
	0x38, 0xfd, 0x2b, 0x75, 0x7b, 0xa0, 0x91, 0x67, 0x38, 0x1d, 0x12, 0x24, 0xf5, 0x55, 0x6d, 0x50,
	0x4c, 0x8d, 0x7a, 0x59, 0xee, 0x3a, 0x5e, 0xbd, 0x84, 0x5c, 0x04, 0x9f, 0x81, 0x7f, 0xd8, 0x42,
	0xb3, 0x92, 0x5c, 0x95, 0x64, 0x58, 0x4c, 0x8d, 0xd6, 0xe2, 0x1c, 0xd7, 0xf1, 0x5a, 0x8b, 0x54,
	0x17, 0xc1, 0x27, 0xa0, 0x91, 0x62, 0x5f, 0x0a, 0xac, 0x49, 0x81, 0x6d, 0x73, 0xfe, 0x68, 0xa7,
	0x03, 0xf3, 0x20, 0xa7, 0xb4, 0xd4, 0x27, 0xa5, 0x29, 0x52, 0x5a, 0xbd, 0xa4, 0xef, 0x0b, 0xf8,
	0x08, 0x34, 0x17, 0x5b, 0x5d, 0xd9, 0xa3, 0x2d, 0x1b, 0xea, 0xdd, 0x62, 0x2d, 0x79, 0x11, 0x83,
	0x5a, 0xa9, 0x05, 0x1a, 0x37, 0x32, 0x6f, 0x7b, 0x30, 0x97, 0xf8, 0x18, 0xb4, 0x24, 0x01, 0xe1,
	0x53, 0x12, 0xe2, 0xb9, 0x1d, 0x5b, 0xb6, 0x56, 0x4c, 0x8d, 0x66, 0xd9, 0xc2, 0x91, 0x80, 0xeb,
	0x78, 0xcd, 0xfc, 0x26, 0x42, 0xb7, 0xc7, 0xdd, 0xff, 0xaa, 0x02, 0x6d, 0xf9, 0xb1, 0xe1, 0x1d,
	0xa0, 0x2f, 0xe7, 0x86, 0x47, 0xec, 0x84, 0xf1, 0x31, 0xd3, 0x2a, 0xf0, 0x2e, 0xd8, 0x59, 0x41,
	0xf7, 0x19, 0xe3, 0x39, 0x0b, 0x71, 0x8c, 0x99, 0xd0, 0x14, 0x78, 0x0f, 0xec, 0xad, 0x50, 0x66,
	0x0b, 0xbc, 0xc1, 0xe9, 0x75, 0x5a, 0x53, 0xa1, 0x01, 0xfe, 0x5f, 0x21, 0xbe, 0xe4, 0x11, 0x61,
	0x07, 0x78, 0xec, 0xbe, 0xd2, 0xaa, 0x6b, 0x57, 0x71, 0x70, 0xc2, 0x33, 0x22, 0xb4, 0x1a, 0xdc,
	0x01, 0xff, 0xad, 0xa0, 0x6f, 0x89, 0x18, 0xa1, 0xd4, 0x1f, 0x6b, 0x1b, 0x6b, 0xe1, 0xc3, 0xd4,
	0x47, 0xd8, 0xce, 0x27, 0x5a, 0x1d, 0x76, 0x41, 0x67, 0x3d, 0xfc, 0x1a, 0x53, 0xaa, 0x35, 0xd6,
	0x96, 0x3f, 0xc7, 0x18, 0x05, 0x7e, 0x78, 0xa2, 0x6d, 0x76, 0x6a, 0x1f, 0xbe, 0x74, 0x2b, 0xb6,
	0x73, 0x51, 0x74, 0x95, 0xcb, 0xa2, 0xab, 0xfc, 0x2c, 0xba, 0xca, 0xb7, 0x5f, 0x5d, 0xe5, 0xdd,
	0xe0, 0x0f, 0xc7, 0x40, 0x60, 0x3f, 0x1e, 0x5e, 0x5d, 0x84, 0xf7, 0x93, 0xcc, 0x22, 0xec, 0x38,
	0xf5, 0x2d, 0x79, 0x82, 0x82, 0xba, 0xfc, 0x75, 0x1e, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x37,
	0xb2, 0x4c, 0xf9, 0x92, 0x04, 0x00, 0x00,
}

func (m *Notification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Notification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Notification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.PublishedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.PublishedAt):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintNcModel(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x2a
	if m.Type != 0 {
		i = encodeVarintNcModel(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintNcModel(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintNcModel(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.ID != 0 {
		i = encodeVarintNcModel(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserNotification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserNotification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Notification != nil {
		{
			size, err := m.Notification.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintNcModel(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.ReadAt != nil {
		n3, err3 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.ReadAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.ReadAt):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintNcModel(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x22
	}
	if m.NotificationID != 0 {
		i = encodeVarintNcModel(dAtA, i, uint64(m.NotificationID))
		i--
		dAtA[i] = 0x18
	}
	if m.UserID != 0 {
		i = encodeVarintNcModel(dAtA, i, uint64(m.UserID))
		i--
		dAtA[i] = 0x10
	}
	if m.ID != 0 {
		i = encodeVarintNcModel(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *User) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *User) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.UserDeviceID) > 0 {
		i -= len(m.UserDeviceID)
		copy(dAtA[i:], m.UserDeviceID)
		i = encodeVarintNcModel(dAtA, i, uint64(len(m.UserDeviceID)))
		i--
		dAtA[i] = 0x12
	}
	if m.ID != 0 {
		i = encodeVarintNcModel(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintNcModel(dAtA []byte, offset int, v uint64) int {
	offset -= sovNcModel(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Notification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovNcModel(uint64(m.ID))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovNcModel(uint64(l))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovNcModel(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovNcModel(uint64(m.Type))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.PublishedAt)
	n += 1 + l + sovNcModel(uint64(l))
	return n
}

func (m *UserNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovNcModel(uint64(m.ID))
	}
	if m.UserID != 0 {
		n += 1 + sovNcModel(uint64(m.UserID))
	}
	if m.NotificationID != 0 {
		n += 1 + sovNcModel(uint64(m.NotificationID))
	}
	if m.ReadAt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.ReadAt)
		n += 1 + l + sovNcModel(uint64(l))
	}
	if m.Notification != nil {
		l = m.Notification.Size()
		n += 1 + l + sovNcModel(uint64(l))
	}
	return n
}

func (m *User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovNcModel(uint64(m.ID))
	}
	l = len(m.UserDeviceID)
	if l > 0 {
		n += 1 + l + sovNcModel(uint64(l))
	}
	return n
}

func sovNcModel(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozNcModel(x uint64) (n int) {
	return sovNcModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Notification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNcModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Notification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Notification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNcModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNcModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNcModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNcModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= NotificationType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublishedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNcModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNcModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.PublishedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNcModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNcModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNcModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNcModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			m.UserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotificationID", wireType)
			}
			m.NotificationID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NotificationID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNcModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNcModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReadAt == nil {
				m.ReadAt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.ReadAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Notification", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNcModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNcModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Notification == nil {
				m.Notification = &Notification{}
			}
			if err := m.Notification.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNcModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNcModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNcModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNcModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserDeviceID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNcModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNcModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserDeviceID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNcModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNcModel
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNcModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipNcModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowNcModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNcModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthNcModel
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupNcModel
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthNcModel
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthNcModel        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowNcModel          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupNcModel = fmt.Errorf("proto: unexpected end of group")
)
